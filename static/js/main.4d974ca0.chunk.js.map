{"version":3,"sources":["img/logo.svg","components/NavBar/DropdownItem.js","components/NavBar/NavBar.js","components/LeftBarItem.js","components/LeftBarTopImage.js","components/LeftBar.js","components/ExploreCategory.js","components/Explore.js","components/Home.js","components/FilmFullCast.js","components/FilmCast.js","components/FilmDetails.js","components/SeriesCast.js","components/SeriesDetails.js","components/Details.js","components/ListFilms.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DropdownItem","props","items","map","item","key","title","className","href","id","role","data-toggle","aria-haspopup","aria-expanded","style","margin","aria-labelledby","links","link","text","url","listItems","NavBar","to","src","logo","height","alt","LeftBarItem","useState","isOpen","setIsOpen","films","setFilms","useEffect","length","getData","a","axios","get","data","results","splice","cursor","onClick","film","original_title","poster_path","color","release_date","vote_average","LeftBarTopImage","state","filmVideo","componentDidMount","site","setState","video","this","width","Component","LeftBar","isGetPopular","setGetPopular","setId","ExploreCategory","apiURL","movies","Math","random","type","fontSize","display","Explore","searchText","setSearchText","searchedMovies","setSearchedMovies","isSearched","setIsSearched","tempArray","undefined","push","console","log","placeholder","aria-label","onChange","event","target","value","marginLeft","media_type","Home","FilmFullCast","cast","person","profile_path","name","fontWeight","character","FilmCast","filmCast","setFilmCast","filmDirector","setFilmDirector","filmWriter","setFilmWriter","filmStars","setFilmStars","getDetails","setGetDetails","isButtonClicked","setButtonClicked","parseInt","getCrew","stars","directors","writers","crew","job","join","FilmDetails","filmData","setFilmData","setFilmVideo","filmGenres","setFilmGenres","filmTime","setFilmTime","filmDate","setFilmDate","getFilmVideo","genres","genre","convertTime","runtime","convertDate","minute","releaseDate","date","split","substring","overview","SeriesCast","seriesCast","setSeriesCast","seriesStars","setSeriesStars","getSeriesDetails","setGetSeriesDetails","SeriesDetails","seriesData","setSeriesData","seriesVideo","setSeriesVideo","seriesGenres","setSeriesGenres","seriesTime","setSeriesTime","seriesDate","setSeriesDate","creators","setCreators","getSeriesVideo","episode_run_time","first_air_date","created_by","hours","minutes","original_name","in_production","last_air_date","Details","match","params","ListFilms","componentDidUpdate","List","lists","listType","App","basename","exact","path","component","withRouter","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4d974ca0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.51111366.svg\";","import React from 'react'\n\nexport default function DropdownItem(props) {\n    return (\n        <div>\n        {\n            props.items.map(item => {\n                return (\n                    <li key={item.title} className=\"nav-item dropdown my-sm-0 float-right\">\n                        <a className=\"nav-link dropdown-toggle text-dark mr-5\" href=\"/\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {item.title}<i className=\"fas fa-chevron-down\" style={{margin:\"0px 12px\"}}></i>\n                        </a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                        {item.links.map(link => {\n                                return (\n                                    <a key={link.text} className=\"dropdown-item\" href={link.url}>{link.text}</a>\n                                )\n                            })}\n                        </div>\n                    </li>\n                )\n            })\n        }\n        </div>\n    )\n}\n","import React from 'react'\nimport logo from '../../img/logo.svg'\nimport DropdownItem from './DropdownItem'\nimport { Link } from 'react-router-dom'\n\n\nconst listItems = [\n    {\n        \"title\":\"Movies\",\n        \"links\":[\n            {\n                \"text\":\"Top Rated Films\",\n                \"url\": \"#\"\n            },\n            {\n                \"text\":\"Most Popular Films\",\n                \"url\": \"#\"\n            },\n            {\n                \"text\":\"Top Box Office\",\n                \"url\": \"#\"\n            }\n        ]\n    },\n    {\n        \"title\":\"TV Shows\",\n        \"links\":[\n            {\n                \"text\":\"Top Rated Shows\",\n                \"url\": \"#\"\n            },\n            {\n                \"text\":\"Most Popular Shows\",\n                \"url\": \"#\"\n            },\n            {\n                \"text\":\"Browse TV Shows by Genre\",\n                \"url\": \"#\"\n            }\n        ]\n    }\n]\n\nexport default function NavBar() {\n    return (\n\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light navbar-custom\"> \n        <   Link to={`/`}>\n                <a className=\"navbar-brand\">\n                    <img src={logo} height=\"40\" alt=\"\"/>\n                </a>\n            </Link>\n            <div className=\"collapse navbar-collapse float-right\" id=\"navbarNavDropdown\">\n                <ul className=\"navbar-nav\">\n                    <DropdownItem items={listItems}/>\n                </ul>\n            </div>\n        </nav>\n\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nexport default function LeftBarItem(props) {\n\n    const [isOpen, setIsOpen] = useState(false)\n    const [films, setFilms] = useState([])\n\n    useEffect(() => {\n        if(films.length === 0)\n            getData()\n    })\n\n    const getData = async () => {\n        const films = await axios.get(props.films)\n        setFilms(films.data.results.splice(0,5))\n    }\n\n    return (\n        <div>\n            <div className={`left-bar-item ${isOpen ? \"left-bar-item-open\" : \"\"}`}>\n                <div style={{cursor:\"pointer\"}} onClick={() => setIsOpen(!isOpen)}>\n                    <span className=\"left-bar-item-text\">{props.text}</span>\n                    <span className={`plus float-right ${isOpen ? \"text-white\" : \"\"}`}>{isOpen ? \"–\" : \"+\"}</span>\n                </div>\n                {isOpen ? \n                <div>\n                    {\n                        films.map(film => {\n                            return (\n                                    <Link key={film.original_title} to={`/details/movie/${film.id}`}>\n                                        <div className=\"left-bar-film\">\n                                        \n                                            <div style={{margin:\"auto\"}}>\n                                                <img src={`https://image.tmdb.org/t/p/w200`+film.poster_path} className=\"left-bar-film-image\" alt={film.original_title}/>\n                                            </div>\n                                            <div className=\"left-bar-film-info\">\n                                                <span className=\"left-bar-film-title\">{film.original_title}</span>\n                                                <span style={{color:\"grey\"}}>{`${film.release_date}`}</span>\n                                            </div>\n                                            <span className=\"imdb-rating\">{film.vote_average}</span>\n                                        \n                                        </div>\n                                    </Link>\n                            )\n                        })\n                    }\n                    <Link to={`/lists/${props.link}`}>\n                        <span className=\"more-result-text\">MORE RESULT</span>\n                    </Link>\n                </div> : null}\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport YouTube from '@u-wave/react-youtube'\n\nexport default class LeftBarTopImage extends Component {\n\n    state = {\n        filmVideo : \"\",\n    }\n\n    componentDidMount=  async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${this.props.id}/videos?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`)\n        if(data.data.results[0].site === \"YouTube\")\n            this.setState({ filmVideo: data.data.results[0].key})\n    }\n    \n    render() {\n        return (\n            <div className=\"top-photo-container\">\n                <YouTube className=\"top-photo\"\n                    video={this.state.filmVideo}\n                    width=\"100%\"\n                />\n            </div>\n        )\n    }\n}\n","import React, {useEffect, useState} from 'react'\nimport LeftBarItem from './LeftBarItem'\nimport LeftBarTopImage from './LeftBarTopImage'\nimport axios from 'axios'\n\nexport default function LeftBar() {\n\n    const nowPlayingUrl = \"https://api.themoviedb.org/3/movie/now_playing?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&page=1\"\n    const comingSoonUrl = \"https://api.themoviedb.org/3/movie/upcoming?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&page=1&region=us\"\n    const popularUrl = \"https://api.themoviedb.org/3/movie/popular?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&page=1\"\n\n    const [isGetPopular, setGetPopular] = useState(false)\n    const [id, setId] = useState(\"\")\n\n    useEffect(() => {\n        if(isGetPopular === false)\n            getData()\n    })\n\n    const getData = async () => {\n        const films = await axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&page=1\")\n        setId(films.data.results.splice(0,1)[0].id)\n        if(id.length !== 0){\n            setGetPopular(true)\n        }\n    }\n\n    return (\n        <div className=\"leftbar\">\n\n            {\n                id.length !== 0 ? <LeftBarTopImage id={id}/> : \"\"\n            }\n        \n            <LeftBarItem text=\"Popular\" films={popularUrl} link=\"popular\"/>\n            <LeftBarItem text=\"Now Playing\" films={nowPlayingUrl} link=\"now-playing\"/>\n            <LeftBarItem text=\"Coming Soon\" films={comingSoonUrl} link=\"coming-soon\"/>\n\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nexport default class ExploreCategory extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            movies: []\n        }\n    }\n\n    componentDidMount = async () => {\n        const movies = await axios.get(this.props.apiURL)\n        this.setState({\n            movies: movies.data.results.splice(0,4)\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"explore-category\">\n                <span className=\"explore-title\">{this.props.title}</span>\n                <div className=\"row explore-row\">\n                    {\n                        this.state.movies.map(film => {\n                            return(\n                                <div key={Math.random()}>\n                                    <Link to={`/details/${this.props.type}/${film.id}`}>\n                                        <img src={`https://image.tmdb.org/t/p/w200`+film.poster_path} className = \"explore-image\" alt=\"\"/>\n                                    </Link>\n                                </div>\n                            )\n                        })\n                    }\n                    \n                </div>\n                <Link to={`/lists/${this.props.link}`}>\n                    <a href=\"/\" style={{fontSize: \"13pt\", margin:\"10px -5px\", display: \"inherit\"}}>\n                        See All {this.props.title} <i className=\"fas fa-angle-double-right\" style={{color: \"grey\", fontSize:\"10pt\"}}></i>\n                    </a>\n                </Link>\n            </div>\n        )\n    }\n}\n","import React, {useState, useEffect} from 'react'\nimport ExploreCategory from './ExploreCategory'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\n//const filterCounter = 0\n\nconst topMovies2019URL = \"https://api.themoviedb.org/3/discover/movie?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&page=1&primary_release_year=2019&vote_count.gte=2000&with_original_language=en\"\nconst trendingsURL = \"https://api.themoviedb.org/3/trending/movie/week?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8\"\nconst topRatedMoviesURL = \"https://api.themoviedb.org/3/discover/movie?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&include_adult=false&include_video=false&page=1&vote_count.gte=10000&with_original_language=en\"\nconst topRatedSeriesURL = \"https://api.themoviedb.org/3/discover/tv?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&page=1&vote_count.gte=500&include_null_first_air_dates=false\"\nconst topSeries2019URL = \"https://api.themoviedb.org/3/discover/tv?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&first_air_date_year=2019&page=1&vote_count.gte=500&include_null_first_air_dates=false\"\n\nexport default function Explore() {\n\n    const [searchText, setSearchText] = useState(\"\")\n    const [searchedMovies, setSearchedMovies] = useState([])\n    const [isSearched, setIsSearched] = useState(false)\n\n    const handleChange = (event) =>{\n        if(event.target.value !== searchText){\n            setSearchText(event.target.value)\n            setIsSearched(true)\n        }\n    }\n\n    useEffect(() => {\n        if(isSearched !== false)\n            getData()\n    })\n\n    const getData = async () => {\n        const films = await axios.get(\"https://api.themoviedb.org/3/search/multi?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&query=\"+searchText+\"&page=1&include_adult=false\")\n        const tempArray = []\n        films.data.results.splice(0,20).map(film => {\n            film.poster_path !== undefined && film.poster_path !== null ? tempArray.push(film) : void(0)\n            return true;\n        })\n        if(tempArray.length !== searchedMovies){\n            setSearchedMovies(tempArray)\n            setIsSearched(false)\n        }\n    }\n    console.log(searchedMovies)\n    return (\n        <div className=\"explore\">\n            <h1 className=\"explore-text\">Explore</h1>\n            <div className=\"search-filters-bar\">\n                <input className=\"form-control search-box\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={handleChange}></input>\n                <span className=\"filter-counter\">0</span>\n                <span className=\"font-weight-bold\" style={{margin:\"auto\",marginLeft:\"10px\",cursor:\"pointer\"}}>All Filters</span>\n            </div>\n            {\n                searchText.length === 0 ? \n                (\n                <div>\n                    <ExploreCategory title=\"Trendings\" apiURL={trendingsURL} type=\"movie\" link=\"trendings\"/>\n                    <ExploreCategory title=\"Top Movies 2019\" apiURL={topMovies2019URL} type=\"movie\" link=\"top-movies-2019\"/>\n                    <ExploreCategory title=\"Top Rated Movies\" apiURL={topRatedMoviesURL} type=\"movie\" link=\"top-rated-movies\"/>\n                    <ExploreCategory title=\"Top TV Series 2019\" apiURL={topSeries2019URL} type=\"tv\" link=\"top-series-2019\"/>\n                    <ExploreCategory title=\"Top Rated TV Series\" apiURL={topRatedSeriesURL} type=\"tv\" link=\"top-rated-series\"/>\n                </div>\n                )\n                :\n                (\n                <div className=\"row explore-row\">\n                    {\n                        searchedMovies.map(film => {\n                            return(\n                                <div key={film.id}>\n                                    <Link to={`/details/${film.media_type}/${film.id}`}>\n                                        <img src={`https://image.tmdb.org/t/p/w200`+film.poster_path} className = \"explore-image\" alt=\"\"/>\n                                    </Link>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                )\n            }\n            \n\n        </div>\n    )\n}\n","import React from 'react';\nimport '../App.css';\nimport NavBar from './NavBar/NavBar';\nimport LeftBar from './LeftBar';\nimport Explore from './Explore';\n\nfunction Home() {\n  return (\n    <div className=\"container container-custom\">\n      <NavBar/>\n      <div className=\"row row-custom\">\n        <div className=\"col-md-auto\">\n          <LeftBar />\n        </div>\n        <div className=\"col\">\n          <Explore />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react'\n\nexport default function FilmFullCast(props) {\n    return (\n        <div className=\"film-full-casts\">\n            {\n                (props.cast.cast).map(person => {\n                    return(\n                        <div className=\"film-full-cast\">\n                            {\n                                person.profile_path === null || person.profile_path === undefined ?\n                                <img src={`https://via.placeholder.com/100x150/?text=No Photo`} className = \"cast-image\" alt=\"\"/>\n                                :\n                                <img src={`https://image.tmdb.org/t/p/w200`+person.profile_path} className = \"cast-image\" alt=\"\"/>\n                            }\n                            <span>{person.name}</span>\n                            <span style={{color:\"gray\", fontSize:\"10pt\", fontWeight:\"bold\"}}>as</span>\n                            <span style={{color:\"gray\", fontSize:\"10pt\"}}>{person.character}</span>\n                        </div>\n                        )\n                })\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport FilmFullCast from './FilmFullCast'\n\nexport default function FilmCast(props) {\n\n    const [filmCast, setFilmCast] = useState([])\n    const [filmDirector, setFilmDirector] = useState([])\n    const [filmWriter, setFilmWriter] = useState([])\n    const [filmStars, setFilmStars] = useState([])\n    const [getDetails, setGetDetails] = useState(false)\n    const [isButtonClicked, setButtonClicked] = useState(false)\n\n    useEffect(() => {\n        if(filmCast.length === 0){\n            getData()\n        }\n        //if movie changed\n        if(parseInt(filmCast.id) !== parseInt(props.id)){\n            getData()\n        }\n        //if we got movie data absolutely\n        if(getDetails){\n            getCrew()\n            setGetDetails(false)\n        }\n    })\n\n    const getData = async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8`)\n        setFilmCast(data.data)\n        setGetDetails(true)\n    }\n\n    const getCrew = () => {\n        const stars = []\n        const directors = []\n        const writers = []\n\n        filmCast.crew.map(person => {\n            if(person.job === \"Director\")\n                return directors.push(person.name)\n            if(person.job === \"Screenplay\" || person.job === \"Writer\")\n                return writers.push(person.name)\n            return true;\n        })\n        filmCast.cast.map(person => {\n            return stars.push(person.name)\n        })\n        setFilmDirector(directors)\n        setFilmWriter(writers)\n        setFilmStars(stars.splice(0,3))\n    }\n\n    return (\n        <div className=\"film-cast-short\">\n            <div className=\"director\">\n                <span style={{fontWeight: \"bold\"}}>Director: </span>\n                {filmDirector.join(\", \")}\n            </div>\n            <div className=\"writers\">\n                <span style={{fontWeight: \"bold\"}}>Writers: </span>\n                {filmWriter.join(\", \")}\n            </div>\n            <div className=\"stars\">\n                <span style={{fontWeight: \"bold\"}}>Stars: </span>\n                {filmStars.join(\", \")}\n            </div>\n            <span className=\"see-all-cast\" onClick={() => {setButtonClicked(!isButtonClicked)}}>\n                    {isButtonClicked ? `Hide All Cast` : `See All Cast`} <i className=\"fas fa-angle-double-right\" style={{color: \"grey\", fontSize:\"10pt\"}}></i>\n            </span>\n            {\n                isButtonClicked ? \n                    <FilmFullCast cast={filmCast}/>\n                    :\n                    \"\"\n            }\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport YouTube from '@u-wave/react-youtube'\nimport FilmCast from './FilmCast'\n\nexport default function FilmDetails(props) {\n\n    const [filmData, setFilmData] = useState([])\n    const [filmVideo, setFilmVideo] = useState(\"\")\n    const [filmGenres, setFilmGenres] = useState(\"\")\n    const [filmTime, setFilmTime] = useState(\"\")\n    const [filmDate, setFilmDate] = useState(\"\")\n\n    useEffect(() => {\n        if(filmData.length === 0){\n            getData()\n            getFilmVideo()\n        }\n        //if movie changed\n        if(parseInt(filmData.id) !== parseInt(props.id))\n            getData()\n            getFilmVideo()\n    })\n\n    const getData = async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`)\n        setFilmData(data.data)\n        const genres = []\n        data.data.genres.splice(0,2).map(genre => {\n            return genres.push(genre.name)\n        })\n        setFilmGenres(genres)\n        setFilmTime(convertTime(data.data.runtime))\n        setFilmDate(convertDate(data.data.release_date))\n    }\n\n    const getFilmVideo = async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/movie/${props.id}/videos?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`)\n        if(data.data.results[0].site === \"YouTube\")\n            setFilmVideo(data.data.results[0].key)\n    }\n\n    const convertTime = (minute) => {\n        let hours = parseInt(minute / 60)\n        let minutes = minute % 60\n        return hours + \"h \" + minutes + \"min\"\n    }\n\n    const convertDate = (releaseDate) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n        let date = releaseDate.split(\"-\")\n        return date[2] + \" \" + months[date[1] - 1] + \" \" + date[0]\n    }\n\n    return (\n        <div className=\"film-details\">\n            <h1 className=\"explore-text\">{filmData.title} \n                <span className=\"film-details-year\">{`(${filmData.release_date ? filmData.release_date.substring(0,4) : \"\"})`}</span>\n            </h1>\n            <div className=\"film-details-subtext\">\n                <span style={{color: \"#ffd701\", fontSize: \"25px\"}}><i className=\"fas fa-star\"></i></span>\n                <span className=\"film-details-subtext-text\">{filmData.vote_average}/10</span>\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\n                <span>{filmTime}</span>\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\n                <span>{ filmGenres[0] + \", \" + filmGenres[1] }</span>\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\n                <span>{filmDate}</span>\n            </div>\n            <div className=\"film-details-media\">            \n                <img src={`https://image.tmdb.org/t/p/w200`+filmData.poster_path} className = \"explore-image m-0\" alt=\"\"/>\n                <YouTube className=\"film-details-video\"\n                    video={filmVideo}\n                    width=\"477px\"\n                    height=\"268px\"\n                />\n            </div>\n\n            <div className=\"film-details-overview\">{filmData.overview}</div>\n            <FilmCast id={filmData.id}/>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport FilmFullCast from './FilmFullCast'\n\nexport default function SeriesCast(props) {\n\n    const [seriesCast, setSeriesCast] = useState([])\n    const [seriesStars, setSeriesStars] = useState([])\n    const [getSeriesDetails, setGetSeriesDetails] = useState(false)\n    const [isButtonClicked, setButtonClicked] = useState(false)\n\n    useEffect(() => {\n        if(seriesCast.length === 0){\n            getData()\n        }\n        //if movie changed\n        if(parseInt(seriesCast.id) !== parseInt(props.id)){\n            getData()\n        }\n        //if we got movie data absolutely\n        if(getSeriesDetails){\n            getCrew()\n            setGetSeriesDetails(false)\n        }\n    })\n\n    const getData = async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/tv/${props.id}/credits?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8`)\n        setSeriesCast(data.data)\n        setGetSeriesDetails(true)\n    }\n\n    const getCrew = () => {\n        const stars = []\n\n        seriesCast.cast.map(person => {\n            return stars.push(person.name)\n        })\n\n        setSeriesStars(stars.splice(0,3))\n    }\n\n    return (\n        <div>\n            <div className=\"stars\">\n                <span style={{fontWeight: \"bold\"}}>Stars: </span>\n                {seriesStars.join(\", \")}\n            </div>\n            <span className=\"see-all-cast\" onClick={() => {setButtonClicked(!isButtonClicked)}}>\n                    {isButtonClicked ? `Hide All Cast` : `See All Cast`} <i className=\"fas fa-angle-double-right\" style={{color: \"grey\", fontSize:\"10pt\"}}></i>\n            </span>\n            {\n                isButtonClicked ? \n                    <FilmFullCast cast={seriesCast}/>\n                    :\n                    \"\"\n            }\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport YouTube from '@u-wave/react-youtube'\nimport SeriesCast from './SeriesCast'\n\nexport default function SeriesDetails(props) {\n\n    const [seriesData, setSeriesData] = useState([])\n    const [seriesVideo, setSeriesVideo] = useState(\"\")\n    const [seriesGenres, setSeriesGenres] = useState(\"\")\n    const [seriesTime, setSeriesTime] = useState(\"\")\n    const [seriesDate, setSeriesDate] = useState(\"\")\n    const [creators, setCreators] = useState([])\n\n    useEffect(() => {\n        if(seriesData.length === 0){\n            getData()\n            getSeriesVideo()\n        }\n        //if movie changed\n        if(parseInt(seriesData.id) !== parseInt(props.id))\n            getData()\n            getSeriesVideo()\n    })\n\n    const getData = async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/tv/${props.id}?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`)\n        setSeriesData(data.data)\n        const genres = []\n        data.data.genres.splice(0,2).map(genre => {\n            return genres.push(genre.name)\n        })\n        setSeriesGenres(genres)\n        setSeriesTime(convertTime(data.data.episode_run_time))\n        setSeriesDate(convertDate(data.data.first_air_date))\n        const creators = []\n        data.data.created_by.splice(0,3).map(person => {\n            return creators.push(person.name)\n        })\n        setCreators(creators)\n    }\n\n    const getSeriesVideo = async () => {\n        const data = await axios.get(`https://api.themoviedb.org/3/${props.type}/${props.id}/videos?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US`)\n        if(data.data.results[0].site === \"YouTube\")\n            setSeriesVideo(data.data.results[0].key)\n    }\n\n    const convertTime = (minute) => {\n        minute = minute[0]\n        let hours = parseInt(minute / 60)\n        let minutes = minute % 60\n        if(hours !== 0)\n            return hours + \"h \" + minutes + \"min\"\n        else\n            return minutes + \"min\"\n    }\n\n    const convertDate = (releaseDate) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n        let date = releaseDate.split(\"-\")\n        return date[2] + \" \" + months[date[1] - 1] + \" \" + date[0]\n    }\n\n    return (\n        <div className=\"film-details\">\n            <h1 className=\"explore-text\">{seriesData.original_name} \n                <span className=\"film-details-year\">\n                    {\n                        `(\n                        ${(seriesData.first_air_date) ? (seriesData.first_air_date).substring(0,4) : \"\"}\n                        – \n                        ${seriesData.in_production ? \"\" : (seriesData.last_air_date) ? seriesData.last_air_date.substring(0,4): \"\"}\n                        )`\n                    }\n                </span>\n            </h1>\n            <div className=\"film-details-subtext\">\n                <span style={{color: \"#ffd701\", fontSize: \"25px\"}}><i className=\"fas fa-star\"></i></span>\n                <span className=\"film-details-subtext-text\">{seriesData.vote_average}/10</span>\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\n                <span>{seriesTime}</span>\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\n                <span>{ seriesGenres.length > 0 ? seriesGenres.join(\", \") : \"\" }</span>\n                <span style={{margin: \"0px 10px\", fontSize: \"14pt\"}}>|</span>\n                <span>{seriesDate}</span>\n            </div>\n            <div className=\"film-details-media\">            \n                <img src={`https://image.tmdb.org/t/p/w200`+seriesData.poster_path} className = \"explore-image m-0\" alt=\"\"/>\n                <YouTube className=\"film-details-video\"\n                    video={seriesVideo}\n                    width=\"477px\"\n                    height=\"268px\"\n                />\n            </div>\n\n            <div className=\"film-details-overview\">{seriesData.overview}</div>\n            <div className=\"film-cast-short\">\n                <span style={{fontWeight: \"bold\"}}>Creators: </span>\n                {creators.join(\", \")}\n                <SeriesCast id={seriesData.id}/>\n            </div>\n            \n\n        </div>\n    )\n}\n","import React from 'react'\nimport NavBar from './NavBar/NavBar';\nimport LeftBar from './LeftBar';\nimport FilmDetails from './FilmDetails';\nimport SeriesDetails from './SeriesDetails'\n\nexport default function Details(props) {\n\n    return (\n        <div className=\"container container-custom\">\n            <NavBar/>\n            <div className=\"row row-custom\">\n                <div className=\"col-md-auto\">\n                    <LeftBar />\n                </div>\n                <div className=\"col\">\n                    {\n                        (props.match.params.type === \"movie\") ?\n                        <FilmDetails id={props.match.params.id} type={props.match.params.type}/>\n                        :\n                        <SeriesDetails id={props.match.params.id} type={props.match.params.type}/>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nexport default class ListFilms extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            movies: []\n        }\n    }\n\n    componentDidMount = async () => {\n        const movies = await axios.get(this.props.url)\n        this.setState({\n            movies: movies.data.results\n        })\n    }\n    componentDidUpdate = async () => {\n        const movies = await axios.get(this.props.url)\n        this.setState({\n            movies: movies.data.results\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"explore-category\">\n                <span className=\"explore-title\">{this.props.title}</span>\n                <div className=\"row explore-row\">\n                    {\n                        this.state.movies.map(film => {\n                            if(film.poster_path !== null && film.poster_path !== undefined){\n                                return(\n                                <div key={Math.random()}>\n                                    <Link to={`/details/${this.props.type}/${film.id}`}>\n                                        <img src={`https://image.tmdb.org/t/p/w200`+film.poster_path} className = \"explore-image\" alt=\"\"/>\n                                    </Link>\n                                </div>\n                                )\n                            }\n                        })\n                    }\n                    \n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport NavBar from './NavBar/NavBar';\nimport LeftBar from './LeftBar';\nimport ListFilms from './ListFilms'\n\nexport default function List(props) {\n\n    const lists = {\n        \"trendings\" : [\"https://api.themoviedb.org/3/trending/movie/week?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8\", \"Trendings\", \"movie\"],\n        \"top-movies-2019\" : [\"https://api.themoviedb.org/3/discover/movie?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&page=1&primary_release_year=2019&vote_count.gte=2000&with_original_language=en\", \"Top Movies 2019\", \"movie\"],\n        \"top-rated-movies\" : [\"https://api.themoviedb.org/3/discover/movie?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&include_adult=false&include_video=false&page=1&vote_count.gte=10000&with_original_language=en\", \"Top Rated Movies\", \"movie\"],\n        \"top-rated-series\" : [\"https://api.themoviedb.org/3/discover/tv?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&page=1&vote_count.gte=500&include_null_first_air_dates=false\", \"Top Rated Series\", \"tv\"],\n        \"top-series-2019\" : [\"https://api.themoviedb.org/3/discover/tv?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&sort_by=vote_average.desc&first_air_date_year=2019&page=1&vote_count.gte=100&include_null_first_air_dates=false\", \"Top Series 2019\", \"tv\"],\n        \"popular\" : [\"https://api.themoviedb.org/3/movie/popular?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&page=1\", \"Popular\", \"movie\"],\n        \"now-playing\" : [\"https://api.themoviedb.org/3/movie/now_playing?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&page=1\", \"Now Playing\", \"movie\"],\n        \"coming-soon\" : [\"https://api.themoviedb.org/3/movie/upcoming?api_key=ee5e74e39e7bb0a1514fd8909bbd92f8&language=en-US&page=1&region=us\", \"Coming Soon\", \"movie\"]\n    }\n\n    const url = lists[props.match.params.listType][0]\n    const title = lists[props.match.params.listType][1]\n    const type = lists[props.match.params.listType][2]\n    \n    return (\n        <div className=\"container container-custom\">\n            <NavBar/>\n            <div className=\"row row-custom\">\n                <div className=\"col-md-auto\">\n                <LeftBar />\n                </div>\n                <div className=\"col\">\n                    <div className=\"explore\">\n                        <h1 className=\"explore-text\">{title}</h1>\n                    </div>\n                    <ListFilms url={url} type={type}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Home from './components/Home'\nimport { Route, HashRouter, withRouter } from 'react-router-dom'\nimport Details from './components/Details'\nimport List from './components/List'\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Route exact path='/' component={Home}/>\n      <Route path='/details/:type/:id' component={withRouter(Details)}/>\n      <Route path='/lists/:listType' component={withRouter(List)}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}